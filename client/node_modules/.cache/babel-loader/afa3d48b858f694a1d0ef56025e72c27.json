{"ast":null,"code":"var _jsxFileName = \"/Users/jexica/Sync/general_assembly/Chickadee/unit_4/week_12/DigiAltar/client/src/components/Drag/DragContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useState } from 'react';\nimport { useDrop } from 'react-dnd';\nimport { ItemTypes } from './ItemTypes'; // import { Box } from './ItemTypes';\n\nimport update from 'immutability-helper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  width: 300,\n  height: 300,\n  border: '1px solid black',\n  position: 'relative'\n};\nexport const DragContainer = ({\n  hideSourceOnDrag\n}) => {\n  _s();\n\n  const [boxes, setBoxes] = useState({\n    a: {\n      top: 20,\n      left: 80,\n      title: 'Drag me around'\n    },\n    b: {\n      top: 180,\n      left: 20,\n      title: 'Drag me too'\n    }\n  });\n  const moveBox = useCallback((id, left, top) => {\n    setBoxes(update(boxes, {\n      [id]: {\n        $merge: {\n          left,\n          top\n        }\n      }\n    }));\n  }, [boxes, setBoxes]);\n  const [, drop] = useDrop(() => ({\n    accept: ItemTypes.BOX,\n\n    drop(item, monitor) {\n      const delta = monitor.getDifferenceFromInitialOffset();\n      const left = Math.round(item.left + delta.x);\n      const top = Math.round(item.top + delta.y);\n      moveBox(item.id, left, top);\n      return undefined;\n    }\n\n  }), [moveBox]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drop,\n    style: styles,\n    children: Object.keys(boxes).map(key => {\n      const {\n        left,\n        top,\n        title\n      } = boxes[key];\n      return /*#__PURE__*/_jsxDEV(Box, {\n        id: key,\n        left: left,\n        top: top,\n        hideSourceOnDrag: hideSourceOnDrag,\n        children: title\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 13\n  }, this);\n};\n\n_s(DragContainer, \"mDTVBuKO4E8V6wWkD9b/kh4Td6o=\", false, function () {\n  return [useDrop];\n});\n\n_c = DragContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DragContainer\");","map":{"version":3,"sources":["/Users/jexica/Sync/general_assembly/Chickadee/unit_4/week_12/DigiAltar/client/src/components/Drag/DragContainer.jsx"],"names":["useCallback","useState","useDrop","ItemTypes","update","styles","width","height","border","position","DragContainer","hideSourceOnDrag","boxes","setBoxes","a","top","left","title","b","moveBox","id","$merge","drop","accept","BOX","item","monitor","delta","getDifferenceFromInitialOffset","Math","round","x","y","undefined","Object","keys","map","key"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,SAAT,QAA0B,aAA1B,C,CACA;;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AACA,MAAMC,MAAM,GAAG;AACXC,EAAAA,KAAK,EAAE,GADI;AAEXC,EAAAA,MAAM,EAAE,GAFG;AAGXC,EAAAA,MAAM,EAAE,iBAHG;AAIXC,EAAAA,QAAQ,EAAE;AAJC,CAAf;AAMA,OAAO,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA0B;AAAA;;AACnD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC;AAC/Ba,IAAAA,CAAC,EAAE;AAAEC,MAAAA,GAAG,EAAE,EAAP;AAAWC,MAAAA,IAAI,EAAE,EAAjB;AAAqBC,MAAAA,KAAK,EAAE;AAA5B,KAD4B;AAE/BC,IAAAA,CAAC,EAAE;AAAEH,MAAAA,GAAG,EAAE,GAAP;AAAYC,MAAAA,IAAI,EAAE,EAAlB;AAAsBC,MAAAA,KAAK,EAAE;AAA7B;AAF4B,GAAD,CAAlC;AAIA,QAAME,OAAO,GAAGnB,WAAW,CAAC,CAACoB,EAAD,EAAKJ,IAAL,EAAWD,GAAX,KAAmB;AAC3CF,IAAAA,QAAQ,CAACT,MAAM,CAACQ,KAAD,EAAQ;AACnB,OAACQ,EAAD,GAAM;AACFC,QAAAA,MAAM,EAAE;AAAEL,UAAAA,IAAF;AAAQD,UAAAA;AAAR;AADN;AADa,KAAR,CAAP,CAAR;AAKH,GAN0B,EAMxB,CAACH,KAAD,EAAQC,QAAR,CANwB,CAA3B;AAOA,QAAM,GAAGS,IAAH,IAAWpB,OAAO,CAAC,OAAO;AAC5BqB,IAAAA,MAAM,EAAEpB,SAAS,CAACqB,GADU;;AAE5BF,IAAAA,IAAI,CAACG,IAAD,EAAOC,OAAP,EAAgB;AAChB,YAAMC,KAAK,GAAGD,OAAO,CAACE,8BAAR,EAAd;AACA,YAAMZ,IAAI,GAAGa,IAAI,CAACC,KAAL,CAAWL,IAAI,CAACT,IAAL,GAAYW,KAAK,CAACI,CAA7B,CAAb;AACA,YAAMhB,GAAG,GAAGc,IAAI,CAACC,KAAL,CAAWL,IAAI,CAACV,GAAL,GAAWY,KAAK,CAACK,CAA5B,CAAZ;AACAb,MAAAA,OAAO,CAACM,IAAI,CAACL,EAAN,EAAUJ,IAAV,EAAgBD,GAAhB,CAAP;AACA,aAAOkB,SAAP;AACH;;AAR2B,GAAP,CAAD,EASpB,CAACd,OAAD,CAToB,CAAxB;AAUA,sBAAQ;AAAK,IAAA,GAAG,EAAEG,IAAV;AAAgB,IAAA,KAAK,EAAEjB,MAAvB;AAAA,cACR6B,MAAM,CAACC,IAAP,CAAYvB,KAAZ,EAAmBwB,GAAnB,CAAwBC,GAAD,IAAS;AACxB,YAAM;AAAErB,QAAAA,IAAF;AAAQD,QAAAA,GAAR;AAAaE,QAAAA;AAAb,UAAuBL,KAAK,CAACyB,GAAD,CAAlC;AACA,0BAAQ,QAAC,GAAD;AAAe,QAAA,EAAE,EAAEA,GAAnB;AAAwB,QAAA,IAAI,EAAErB,IAA9B;AAAoC,QAAA,GAAG,EAAED,GAAzC;AAA8C,QAAA,gBAAgB,EAAEJ,gBAAhE;AAAA,kBACbM;AADa,SAAUoB,GAAV;AAAA;AAAA;AAAA;AAAA,cAAR;AAGH,KALL;AADQ;AAAA;AAAA;AAAA;AAAA,UAAR;AAQH,CA9BM;;GAAM3B,a;UAYQR,O;;;KAZRQ,a","sourcesContent":["import { useCallback, useState } from 'react';\nimport { useDrop } from 'react-dnd';\nimport { ItemTypes } from './ItemTypes';\n// import { Box } from './ItemTypes';\nimport update from 'immutability-helper';\nconst styles = {\n    width: 300,\n    height: 300,\n    border: '1px solid black',\n    position: 'relative',\n};\nexport const DragContainer = ({ hideSourceOnDrag }) => {\n    const [boxes, setBoxes] = useState({\n        a: { top: 20, left: 80, title: 'Drag me around' },\n        b: { top: 180, left: 20, title: 'Drag me too' },\n    });\n    const moveBox = useCallback((id, left, top) => {\n        setBoxes(update(boxes, {\n            [id]: {\n                $merge: { left, top },\n            },\n        }));\n    }, [boxes, setBoxes]);\n    const [, drop] = useDrop(() => ({\n        accept: ItemTypes.BOX,\n        drop(item, monitor) {\n            const delta = monitor.getDifferenceFromInitialOffset();\n            const left = Math.round(item.left + delta.x);\n            const top = Math.round(item.top + delta.y);\n            moveBox(item.id, left, top);\n            return undefined;\n        },\n    }), [moveBox]);\n    return (<div ref={drop} style={styles}>\n\t\t\t{Object.keys(boxes).map((key) => {\n            const { left, top, title } = boxes[key];\n            return (<Box key={key} id={key} left={left} top={top} hideSourceOnDrag={hideSourceOnDrag}>\n\t\t\t\t\t\t{title}\n\t\t\t\t\t</Box>);\n        })}\n\t\t</div>);\n};\n"]},"metadata":{},"sourceType":"module"}