{"ast":null,"code":"var _jsxFileName = \"/Users/jexica/Sync/general_assembly/Chickadee/unit_4/week_12/DigiAltar/client/src/screens/UserAltars/UserAltars.jsx\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport './UserAltars';\nimport Button from \"../../components/Button/Button\";\nimport AltarCard from \"../../components/AltarCard/AltarCard\";\nimport { createAltar } from '../../services/altars';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UserAltars(props) {\n  const randomName = ['Hypnotic', \"Cyber\", \"Techno\", \"Crypto\", \"Digital\", \"Byte\"];\n  const randomName2 = ['Sanctuary', \"Shrine\", \"Divine\", \"Holiness\", \"Seance\"];\n  const userId = props.user.id;\n\n  const handleCreate = async e => {\n    e.preventDefault();\n    const newAltar = {\n      name: randomName[Math.floor(Math.random() * randomName.length)] + \" \" + randomName2[Math.floor(Math.random() * randomName2.length)],\n      user_id: userId,\n      privacy: false\n    };\n    const created = await createAltar(newAltar);\n\n    if (created) {\n      history.push(`/create/${created.id}`);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [props.user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-32 text-right mr-12\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-primary mr-8\",\n        children: [\" Welcome, \", props.user.username, \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 61\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: props.handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }, this) : null, props.altars.map(altar => /*#__PURE__*/_jsxDEV(AltarCard, {\n      images: props.images,\n      altar: altar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleCreate,\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_c = UserAltars;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserAltars\");","map":{"version":3,"sources":["/Users/jexica/Sync/general_assembly/Chickadee/unit_4/week_12/DigiAltar/client/src/screens/UserAltars/UserAltars.jsx"],"names":["React","Link","Button","AltarCard","createAltar","UserAltars","props","randomName","randomName2","userId","user","id","handleCreate","e","preventDefault","newAltar","name","Math","floor","random","length","user_id","privacy","created","history","push","username","handleLogout","altars","map","altar","images"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,cAAP;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,SAASC,WAAT,QAA4B,uBAA5B;;;AAGA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAExC,QAAMC,UAAU,GAAG,CAAC,UAAD,EAAa,OAAb,EAAsB,QAAtB,EAAgC,QAAhC,EAA0C,SAA1C,EAAqD,MAArD,CAAnB;AACA,QAAMC,WAAW,GAAG,CAAC,WAAD,EAAc,QAAd,EAAwB,QAAxB,EAAkC,UAAlC,EAA8C,QAA9C,CAApB;AACA,QAAMC,MAAM,GAAGH,KAAK,CAACI,IAAN,CAAWC,EAA1B;;AAEA,QAAMC,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,QAAQ,GAAG;AACfC,MAAAA,IAAI,EAAET,UAAU,CAACU,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBZ,UAAU,CAACa,MAAtC,CAAD,CAAV,GAA4D,GAA5D,GAAkEZ,WAAW,CAACS,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBX,WAAW,CAACY,MAAvC,CAAD,CADpE;AAEfC,MAAAA,OAAO,EAAEZ,MAFM;AAGfa,MAAAA,OAAO,EAAE;AAHM,KAAjB;AAKE,UAAMC,OAAO,GAAG,MAAMnB,WAAW,CAACW,QAAD,CAAjC;;AACA,QAAIQ,OAAJ,EAAa;AACXC,MAAAA,OAAO,CAACC,IAAR,CAAc,WAAUF,OAAO,CAACZ,EAAG,EAAnC;AACD;AACN,GAXC;;AAaA,sBACE;AAAA,eACGL,KAAK,CAACI,IAAN,gBAAa;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,8BAAwC;AAAM,QAAA,SAAS,EAAC,mBAAhB;AAAA,iCAA+CJ,KAAK,CAACI,IAAN,CAAWgB,QAA1D;AAAA;AAAA;AAAA;AAAA;AAAA,cAAxC,eACd,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEpB,KAAK,CAACqB,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADc;AAAA;AAAA;AAAA;AAAA;AAAA,YAAb,GAC4D,IAF/D,EAKGrB,KAAK,CAACsB,MAAN,CAAaC,GAAb,CAAkBC,KAAD,iBAChB,QAAC,SAAD;AAAW,MAAA,MAAM,EAAExB,KAAK,CAACyB,MAAzB;AAAiC,MAAA,KAAK,EAAED;AAAxC;AAAA;AAAA;AAAA;AAAA,YADD,CALH,eASI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAElB,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA,kBADF;AAcD;KAjCuBP,U","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport './UserAltars';\nimport Button from \"../../components/Button/Button\";\nimport AltarCard from \"../../components/AltarCard/AltarCard\";\nimport { createAltar } from '../../services/altars'\n\n\nexport default function UserAltars(props) {\n\n  const randomName = ['Hypnotic', \"Cyber\", \"Techno\", \"Crypto\", \"Digital\", \"Byte\"]\n  const randomName2 = ['Sanctuary', \"Shrine\", \"Divine\", \"Holiness\", \"Seance\",  ]\n  const userId = props.user.id;\n\n  const handleCreate = async (e) => {\n    e.preventDefault();\n    const newAltar = {\n      name: randomName[Math.floor(Math.random() * randomName.length)] + \" \" + randomName2[Math.floor(Math.random() * randomName2.length)],\n      user_id: userId,\n      privacy: false\n    };\n      const created = await createAltar(newAltar);\n      if (created) {\n        history.push(`/create/${created.id}`);\n      }\n};\n  \n  return (\n    <>\n      {props.user ? <div className=\"mt-32 text-right mr-12\"><span className=\"text-primary mr-8\"> Welcome, {props.user.username}.</span>\n      <Button onClick={props.handleLogout}>Logout</Button></div> : null}  \n      \n      \n      {props.altars.map((altar) => (\n        <AltarCard images={props.images} altar={altar}/>\n      ))}\n      \n        <Button onClick={handleCreate}>Create</Button>\n  \n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}