{"ast":null,"code":"var _jsxFileName = \"/Users/jexica/Sync/general_assembly/Chickadee/unit_4/week_12/DigiAltar/client/src/components/Drag/DragContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport { ItemTypes } from \"./ItemTypes\";\nimport Box from \"./Box.jsx\";\nimport update from \"immutability-helper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  width: \"100vw\",\n  height: \"100vh\",\n  border: \"5px solid white\",\n  position: \"relative\"\n};\nexport const DragContainer = ({\n  hideSourceOnDrag\n}) => {\n  _s();\n\n  const [boxes, setBoxes] = useState({\n    a: {\n      top: 20,\n      left: 80,\n      title: \"Drag me around\"\n    },\n    b: {\n      top: 180,\n      left: 20,\n      title: \"Drag me too\"\n    }\n  });\n  const moveBox = useCallback((id, left, top) => {\n    setBoxes(update(boxes, {\n      [id]: {\n        $merge: {\n          left,\n          top\n        }\n      }\n    }));\n  }, [boxes, setBoxes]);\n  const [, drop] = useDrop(() => ({\n    accept: ItemTypes.BOX,\n\n    drop(item, monitor) {\n      const delta = monitor.getDifferenceFromInitialOffset();\n      const left = Math.round(item.left + delta.x);\n      const top = Math.round(item.top + delta.y);\n      moveBox(item.id, left, top);\n      return undefined;\n    }\n\n  }), [moveBox]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drop,\n    style: styles,\n    children: \"props.children\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DragContainer, \"PVyoAmHoEQlUbpojeODn3YqEecI=\", false, function () {\n  return [useDrop];\n});\n\n_c = DragContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DragContainer\");","map":{"version":3,"sources":["/Users/jexica/Sync/general_assembly/Chickadee/unit_4/week_12/DigiAltar/client/src/components/Drag/DragContainer.jsx"],"names":["useCallback","useState","useDrop","ItemTypes","Box","update","styles","width","height","border","position","DragContainer","hideSourceOnDrag","boxes","setBoxes","a","top","left","title","b","moveBox","id","$merge","drop","accept","BOX","item","monitor","delta","getDifferenceFromInitialOffset","Math","round","x","y","undefined"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AACA,MAAMC,MAAM,GAAG;AACbC,EAAAA,KAAK,EAAE,OADM;AAEbC,EAAAA,MAAM,EAAE,OAFK;AAGbC,EAAAA,MAAM,EAAE,iBAHK;AAIbC,EAAAA,QAAQ,EAAE;AAJG,CAAf;AAMA,OAAO,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA0B;AAAA;;AACrD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC;AACjCc,IAAAA,CAAC,EAAE;AAAEC,MAAAA,GAAG,EAAE,EAAP;AAAWC,MAAAA,IAAI,EAAE,EAAjB;AAAqBC,MAAAA,KAAK,EAAE;AAA5B,KAD8B;AAEjCC,IAAAA,CAAC,EAAE;AAAEH,MAAAA,GAAG,EAAE,GAAP;AAAYC,MAAAA,IAAI,EAAE,EAAlB;AAAsBC,MAAAA,KAAK,EAAE;AAA7B;AAF8B,GAAD,CAAlC;AAIA,QAAME,OAAO,GAAGpB,WAAW,CACzB,CAACqB,EAAD,EAAKJ,IAAL,EAAWD,GAAX,KAAmB;AACjBF,IAAAA,QAAQ,CACNT,MAAM,CAACQ,KAAD,EAAQ;AACZ,OAACQ,EAAD,GAAM;AACJC,QAAAA,MAAM,EAAE;AAAEL,UAAAA,IAAF;AAAQD,UAAAA;AAAR;AADJ;AADM,KAAR,CADA,CAAR;AAOD,GATwB,EAUzB,CAACH,KAAD,EAAQC,QAAR,CAVyB,CAA3B;AAYA,QAAM,GAAGS,IAAH,IAAWrB,OAAO,CACtB,OAAO;AACLsB,IAAAA,MAAM,EAAErB,SAAS,CAACsB,GADb;;AAELF,IAAAA,IAAI,CAACG,IAAD,EAAOC,OAAP,EAAgB;AAClB,YAAMC,KAAK,GAAGD,OAAO,CAACE,8BAAR,EAAd;AACA,YAAMZ,IAAI,GAAGa,IAAI,CAACC,KAAL,CAAWL,IAAI,CAACT,IAAL,GAAYW,KAAK,CAACI,CAA7B,CAAb;AACA,YAAMhB,GAAG,GAAGc,IAAI,CAACC,KAAL,CAAWL,IAAI,CAACV,GAAL,GAAWY,KAAK,CAACK,CAA5B,CAAZ;AACAb,MAAAA,OAAO,CAACM,IAAI,CAACL,EAAN,EAAUJ,IAAV,EAAgBD,GAAhB,CAAP;AACA,aAAOkB,SAAP;AACD;;AARI,GAAP,CADsB,EAWtB,CAACd,OAAD,CAXsB,CAAxB;AAaA,sBACE;AAAK,IAAA,GAAG,EAAEG,IAAV;AAAgB,IAAA,KAAK,EAAEjB,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAzCM;;GAAMK,a;UAiBMT,O;;;KAjBNS,a","sourcesContent":["import { useCallback, useState } from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport { ItemTypes } from \"./ItemTypes\";\nimport Box from \"./Box.jsx\";\nimport update from \"immutability-helper\";\nconst styles = {\n  width: \"100vw\",\n  height: \"100vh\",\n  border: \"5px solid white\",\n  position: \"relative\",\n};\nexport const DragContainer = ({ hideSourceOnDrag }) => {\n  const [boxes, setBoxes] = useState({\n    a: { top: 20, left: 80, title: \"Drag me around\" },\n    b: { top: 180, left: 20, title: \"Drag me too\" },\n  });\n  const moveBox = useCallback(\n    (id, left, top) => {\n      setBoxes(\n        update(boxes, {\n          [id]: {\n            $merge: { left, top },\n          },\n        })\n      );\n    },\n    [boxes, setBoxes]\n  );\n  const [, drop] = useDrop(\n    () => ({\n      accept: ItemTypes.BOX,\n      drop(item, monitor) {\n        const delta = monitor.getDifferenceFromInitialOffset();\n        const left = Math.round(item.left + delta.x);\n        const top = Math.round(item.top + delta.y);\n        moveBox(item.id, left, top);\n        return undefined;\n      },\n    }),\n    [moveBox]\n  );\n  return (\n    <div ref={drop} style={styles}>\n      props.children\n      {/* {Object.keys(boxes).map((key) => {\n        const { left, top, title } = boxes[key];\n        return (\n          \n        );\n      })} */}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}