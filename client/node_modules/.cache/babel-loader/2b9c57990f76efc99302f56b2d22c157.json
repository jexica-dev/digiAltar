{"ast":null,"code":"var _jsxFileName = \"/Users/jexica/Sync/general_assembly/Chickadee/unit_4/week_12/DigiAltar/client/src/screens/AltarEdit/AltarEdit.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams } from 'react-router';\nimport AltarForm from '../../components/AltarForm/AltarForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AltarEdit(props) {\n  _s();\n\n  const {\n    altarId\n  } = useParams();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.altars.filter(altar => {\n      console.log(altar.id);\n      return altar.id == altarId;\n    }).map(altar => {\n      return /*#__PURE__*/_jsxDEV(AltarForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AltarEdit, \"zaG6elOINtFQ80gGPjlq2AYpyCI=\", false, function () {\n  return [useParams];\n});\n\n_c = AltarEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"AltarEdit\");","map":{"version":3,"sources":["/Users/jexica/Sync/general_assembly/Chickadee/unit_4/week_12/DigiAltar/client/src/screens/AltarEdit/AltarEdit.jsx"],"names":["React","useParams","AltarForm","AltarEdit","props","altarId","altars","filter","altar","console","log","id","map"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,SAAP,MAAsB,sCAAtB;;AAGA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACvC,QAAM;AAAEC,IAAAA;AAAF,MAAcJ,SAAS,EAA7B;AACA,sBACE;AAAA,cACGG,KAAK,CAACE,MAAN,CAAaC,MAAb,CAAqBC,KAAD,IAAW;AAC9BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,EAAlB;AACA,aAAQH,KAAK,CAACG,EAAN,IAAYN,OAApB;AACD,KAHA,EAGEO,GAHF,CAGOJ,KAAD,IAAW;AAChB,0BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cADF;AAGD,KAPA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAhBuBL,S;UACFF,S;;;KADEE,S","sourcesContent":["import React from 'react'\nimport { useParams } from 'react-router';\nimport AltarForm from '../../components/AltarForm/AltarForm';\n\n  \nexport default function AltarEdit(props) {\n  const { altarId } = useParams();\n  return (\n    <div>\n      {props.altars.filter((altar) => {\n        console.log(altar.id)\n        return (altar.id == altarId);\n      }).map((altar) => {\n        return (\n          <AltarForm />\n        )\n      })}\n  \n      \n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}